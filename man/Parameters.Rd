% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Parameters-class.R
\docType{class}
\name{Parameters}
\alias{Parameters}
\alias{Parameters-class}
\alias{as.list.Parameters}
\alias{lines.Parameters}
\alias{meanParameters}
\alias{parameters}
\alias{plot.Parameters}
\title{The Parameters class and constructor}
\usage{
\method{plot}{Parameters}(x, xlim = c(0.001, 1), ...)

\method{lines}{Parameters}(x, ...)

\method{as.list}{Parameters}(x)

parameters(names = c(), vals = c(), transformed = TRUE,
  base = new("Parameters"))

meanParameters(x)
}
\arguments{
\item{names}{String vector. Contains the names of the parameters that will
have non default values.}

\item{vals}{Numeric vector. The corresponding values, transformed if \code{transformed} is TRUE.}

\item{transformed}{Boolean. If TRUE vals should contain the transformed parameter values.}

\item{base}{\code{Parameters} object. The parameter values will be used instead of the default values.}
}
\value{
Returns an object of the Parameters class
}
\description{
A class that contains all model parameters
}
\section{Slots}{

\describe{
  \item{\code{logWinf}:}{Numeric scalar. Asymptotic weight}
  \item{\code{logFm}:}{Numeric scalar. Fishing mortality}
  \item{\code{logA}:}{Numeric scalar. Growth parameter}
  \item{\code{logn}:}{Numeric scalar. Exponent of consumption}
  \item{\code{logeta_F}:}{Numeric scalar. 50\% retention size, relative to asymptotic weight}
  \item{\code{logeta_m}:}{Numeric scalar. 50\% maturation size, relative to asymptotic weight}
  \item{\code{logeta_S}:}{Numeric scalar. 50\% retention size (survey), relative to asymptotic weight}
  \item{\code{loga}:}{Numeric scalar. Physiological mortality}
  \item{\code{logepsilon_a}:}{Numeric scalar. Allocation to activity}
  \item{\code{logepsilon_r}:}{Numeric scalar. Recruitment efficiency}
  \item{\code{logWfs}:}{Numeric scalar. 50\% retention size}
  \item{\code{logu}:}{Numeric scalar. Selectivity parameter, width o}
  \item{\code{M}:}{Numeric scalar. Number of internal weight classes}
  \item{\code{scaleWinf}:}{Numeric scalar. Scale of asymptotic weight}
  \item{\code{scaleFm}:}{Numeric scalar. Scale of fishing mortality}
  \item{\code{scaleA}:}{Numeric scalar. Scale of growth parameter}
  \item{\code{scalen}:}{Numeric scalar. Scale of exponent of consumption}
  \item{\code{scaleeta_F}:}{Numeric scalar. Scale of 50\% retantion size}
  \item{\code{scaleeta_m}:}{Numeric scalar. Scale of 50\% maturation size}
  \item{\code{scaleeta_S}:}{Numeric scalar. Scale of survey gear 50\% retantion size}
  \item{\code{scalea}:}{Numeric scalar. Scale of the physiological mortality}
  \item{\code{scaleepsilon_a}:}{Numeric scalar. Scale of the allocation to activity}
  \item{\code{scaleepsilon_r}:}{Numeric scalar. Scale of recruitment efficiency}
  \item{\code{scaleWfs}:}{Numeric scalar. Scale of size of 50\% retention}
  \item{\code{scaleu}:}{Numeric scalar.}
}
}
\examples{

## Without any arguments gives a Parameters object with default values
parameters()

## Changing some parameters gives the corresponding object
par1 <- parameters(c("Winf", "Fm", "Wfs"), c(log(1000 / 10000), log(0.4 / 0.25), log(100 / 1000)))
par2 <- parameters(c("Winf", "Fm", "Wfs"), c(1000 , 0.4, 100), transformed=FALSE)

## Check if the two objects are equal
all.equal(par1, par2)

## Take a Parameters object and change one parameter
par <- parameters(c("Winf", "a", "Fm", "Wfs"), c(1000, 0.4, 0.2, 100), transformed = FALSE)
changeMatsize <- parameters("eta_m", 0.3, transformed =FALSE, base=par)

difference(par, changeMatsize)
##       base comp difference percent.difference
## eta_m 0.25  0.3      -0.05                 20
}
\author{
alko

alko
}
\keyword{constructor}

